studentmanage 
1. new project -> Spring Initializr 选择Default -> next -> 命名 -> Dependencies：选择的 有 Spring Web Starter ,MySQL Driver
2.配置pom.xml
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.6.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>com.blen.study</groupId>
  <artifactId>studentmanage</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>studentmanage</name>
  <description>studentmanage project for Spring Boot</description>

  <properties>
    <java.version>1.8</java.version>
    <mysql.version>5.7.26</mysql.version>
    <swagger2.version>2.9.2</swagger2.version>
    <hikaricp.version>3.3.1</hikaricp.version>
    <mybatis-spring-boot-starter.version>2.0.1</mybatis-spring-boot-starter.version>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- mysql API -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Swagger API -->
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>${swagger2.version}</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>${swagger2.version}</version>
    </dependency>

    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP</artifactId>
      <version>${hikaricp.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>${mybatis-spring-boot-starter.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>

3. 安装LomBok插件，在setting中安装后，需要配置
  <properties>

    <lombok.version>1.16.20</lombok.version>

  <dependencies>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

也可能是这个
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>

4. Application 中配置

  @Configuration
  @EnableSwagger2
  @MapperScan("com.blen.study.studentmanage.dao;")
  @SpringBootApplication
  public class StudentmanageApplication {

    @Value("${swagger2.enable: true}")
    private boolean swaggerSwitch;
    public static void main(String[] args) {
      SpringApplication.run(StudentmanageApplication.class, args);
    }

    @Bean
    public Docket createSwaggerDocket() {

      //  Swagger API 配置

      return new Docket(DocumentationType.SWAGGER_2)
          .enable(swaggerSwitch)
          .select()
          .apis(RequestHandlerSelectors.any())
          .apis(RequestHandlerSelectors.basePackage("com.blen.study.studentmanage.controlle"))
          .paths(PathSelectors.any())
          .build();
    }
5.在resource中添加mapper.xml

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <!-- 将namespace的值设置为DAO类对应的路径 -->
  <mapper namespace="com.blen.study.studentmanage.dao.StudentInfoMapper">

    <!-- 增加一条数据 -->
    <insert id="addStudent" parameterType="com.blen.study.studentmanage.domain.StudentInfo" keyColumn="id" keyProperty="id"  useGeneratedKeys="true">
        INSERT INTO student(name,sex,age,major,grade) VALUES( #{name}, #{sex}, #{age}, #{major}, #{grade})
    </insert>

    <!-- 删除一条数据 -->
    <delete id="deleteStudent" parameterType="long">
        DELETE FROM student WHERE id = #{id}
    </delete>

    <!-- 更新一条数据 -->
    <update id="updateStudent" parameterType="com.blen.study.studentmanage.domain.StudentInfo">
        UPDATE student SET student.name = #{name}, student.sex = #{sex},
        student.age = #{age}, student.major = #{major}, student.grade = #{grade} WHERE student.id = #{id}
    </update>

    <!-- 查询一条数据 -->
    <select id="getStudentInfo" resultMap="resultMap" parameterType="long">
        SELECT * FROM student WHERE s_code = #{s_code}
    </select>

    <resultMap id="resultMap" type="com.blen.study.studentmanage.domain.StudentInfo">
      <id column="s_id" jdbcType="BIGINT" property="is_d"/>
      <id column="s_code" jdbcType="BIGINT" property="s_cose"/>
      <result column="s_name" jdbcType="VARCHAR" property="s_name"/>
      <result column="s_sex" jdbcType="VARCHAR" property="s_sex"/>
      <result column="s_age" jdbcType="BIGINT" property="age"/>
      <result column="classname" jdbcType="VARCHAR" property="classname"/>
    </resultMap>
</mapper>

6. 在resource中添加 application.yml和mybatis-configuration.xml

application.yml  内容：

spring:
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/student-manager?useUnicode=true&characterEncoding=utf-8&useSSL=true
    username: root
    password: newpass

mybatis:
  config-location: classpath:mybatis-configuration.xml
  mapper-locations: classpath:mapper/*.xml


mybatis-configuration.xml 中内容：

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
    PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
  <properties>
    <property name="queryTimeoutSecond" value="5"/>
  </properties>
</configuration>

1.数据库表不要用中划线命名
2."message": "nested exception is org.apache.ibatis.reflection.ReflectionException: Could not set property 'is_d' of 'class com.blen.study.studentmanage.domain.StudentInfo' with value '1' Cause: org.apache.ibatis.reflection.ReflectionException: There is no setter for property named 'is_d' in 'class com.blen.study.studentmanage.domain.StudentInfo'",
因为mapper.xml中有参数拼写错误